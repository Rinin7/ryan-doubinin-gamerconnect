[{"C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\index.js":"1","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\components\\App.js":"2","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\config\\Fire.js":"3","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\CreateActivity\\CreateActivity.jsx":"4","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\Home\\Home.jsx":"5","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\Login\\Login.jsx":"6","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\components\\ActivityList\\ActivityList.jsx":"7","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\components\\Header\\Header.jsx":"8","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\components\\GameList\\GameList.jsx":"9","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\ViewActivity\\ViewActivity.jsx":"10","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\Signup\\Signup.jsx":"11","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\EditActivity\\EditActivity.jsx":"12","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\MyActivities\\MyActivities.jsx":"13"},{"size":208,"mtime":1611113879909,"results":"14","hashOfConfig":"15"},{"size":2998,"mtime":1613160681034,"results":"16","hashOfConfig":"15"},{"size":495,"mtime":1611427693251,"results":"17","hashOfConfig":"15"},{"size":5176,"mtime":1613107641338,"results":"18","hashOfConfig":"15"},{"size":5009,"mtime":1612251629559,"results":"19","hashOfConfig":"15"},{"size":1806,"mtime":1613107147423,"results":"20","hashOfConfig":"15"},{"size":1399,"mtime":1612247921266,"results":"21","hashOfConfig":"15"},{"size":1654,"mtime":1612247955519,"results":"22","hashOfConfig":"15"},{"size":461,"mtime":1612247837512,"results":"23","hashOfConfig":"15"},{"size":8492,"mtime":1612252817137,"results":"24","hashOfConfig":"15"},{"size":3432,"mtime":1613106784972,"results":"25","hashOfConfig":"15"},{"size":5245,"mtime":1613107804713,"results":"26","hashOfConfig":"15"},{"size":3570,"mtime":1612251887247,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"khay13",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"30"},"C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\index.js",[],["64","65"],"C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\components\\App.js",["66"],"import React, { useState, useEffect } from \"react\";\nimport fire from \"../config/Fire\";\nimport Home from \"../Pages/Home/Home\";\nimport CreateActivity from \"../Pages/CreateActivity/CreateActivity\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Login from \"../Pages/Login/Login\";\nimport ViewActivity from \"../Pages/ViewActivity/ViewActivity\";\nimport EditActivity from \"../Pages/EditActivity/EditActivity\";\nimport MyActivities from \"../Pages/MyActivities/MyActivities\";\nimport Signup from \"../Pages/Signup/Signup\";\nimport Header from \"../components/Header/Header\";\n\nfunction App() {\n  const [user, setUser] = useState(undefined);\n  const [authListenerAdded, setAuthListenerAdded] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const db = fire.firestore();\n\n  // FUNCTION FOR AUTHENTICATION\n  const authListener = () => {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        console.log(user);\n        setUser(user);\n        localStorage.setItem(\"isAuthenticated\", \"true\");\n      } else {\n        setUser(null);\n        localStorage.removeItem(\"isAuthenticated\");\n        setUsername(\"\");\n      }\n    });\n\n    setAuthListenerAdded(true);\n  };\n\n  useEffect(() => {\n    if (!authListenerAdded) {\n      authListener();\n    }\n\n    if (user && username === \"\") {\n      db.doc(`users/${user.uid}`)\n        .get()\n        .then((documentSnapshot) => {\n          const data = documentSnapshot.data();\n\n          if (data && data.username) {\n            setUsername(documentSnapshot.data().username);\n          }\n        });\n    }\n  }, [user]);\n\n  // FUNCTION TO CHANGE ROUTES TO PROTECTED ROUTES\n  function PrivateRoute({ component: Component, ...rest }) {\n    return <Route {...rest} render={(props) => (localStorage.isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />)} />;\n  }\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header username={username} user={user} />\n        <Switch>\n          <Route path=\"/login\" exact component={(routerProps) => <Login {...routerProps} user={user} />} />\n          <Route path=\"/signup\" exact component={(routerProps) => <Signup {...routerProps} user={user} />} />\n          <PrivateRoute path=\"/\" exact component={(routerProps) => <Home {...routerProps} user={user} />} />\n          <PrivateRoute path=\"/myactivities\" exact component={(routerProps) => <MyActivities {...routerProps} user={user} username={username} />} />\n          <PrivateRoute path=\"/create\" exact component={(routerProps) => <CreateActivity {...routerProps} user={user} username={username} />} />\n          <PrivateRoute path=\"/activities/:id\" exact component={(routerProps) => <ViewActivity {...routerProps} user={user} username={username} />} />\n          <PrivateRoute path=\"/activities/:id/edit\" exact component={(routerProps) => <EditActivity {...routerProps} user={user} username={username} />} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\config\\Fire.js",[],"C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\CreateActivity\\CreateActivity.jsx",["67","68"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport fire from \"../../config/Fire\";\r\nimport firebase from \"firebase\";\r\nimport \"./CreateActivity.scss\";\r\n\r\nexport default function CreateActivity({ user, username }) {\r\n  const db = fire.firestore();\r\n  const history = useHistory();\r\n  const [games, setGames] = useState([]);\r\n  const [selectedGame, setSelectedGame] = useState(\"\");\r\n  const [skill, setSkill] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp();\r\n  const [validationError, setValidationError] = useState(\"\");\r\n\r\n  // FUNCTION TO ADD NEW ACTIVITY\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (selectedGame === \"\") {\r\n      return setValidationError(\"Please select a game\");\r\n    }\r\n\r\n    if (skill === \"\") {\r\n      return setValidationError(\"Please choose a skill level\");\r\n    }\r\n\r\n    if (description === \"\") {\r\n      return setValidationError(\"Please provide a brief description\");\r\n    }\r\n\r\n    db.collection(\"activities\")\r\n      .add({ skill, description, timestamp, selectedGame, host: username, hostId: user.uid })\r\n      .then((res) => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // FUNCTION TO GET GAMES COLLECTION DATA\r\n  function getGames() {\r\n    db.collection(\"games\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const items = querySnapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\r\n        setGames(items);\r\n      });\r\n  }\r\n\r\n  // FUNCTION TO RENDER A GAME PICTURE BASED ON GAME SELECTED IN DROP DOWN MENU\r\n  function renderSelectedGame() {\r\n    if (selectedGame !== \"\") {\r\n      const current = games.find((game) => game.title === selectedGame);\r\n      return <img className=\"create__form-image\" src={current.imageUrl} />;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (games.length === 0) {\r\n      getGames();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"create\">\r\n        <div className=\"create__header-container\">\r\n          <h1 className=\"create__header\">Create Activity</h1>\r\n        </div>\r\n        <form className=\"create__form\" onSubmit={handleSubmit}>\r\n          <div className=\"create__form-container\">\r\n            <div className=\"create__form-game\">\r\n              <label className=\"create__form-label\" htmlFor=\"game\">\r\n                Game\r\n              </label>\r\n              <div className=\"create__form-game-line\">\r\n                {renderSelectedGame()}\r\n                <select className=\"create__form-select\" value={selectedGame} onChange={(event) => setSelectedGame(event.target.value)} name=\"game\" id=\"game\">\r\n                  <option value=\"\">Please select...</option>\r\n                  {games\r\n                    .filter((game) => (game.title.includes(\"All\") ? \"\" : game.title))\r\n                    .sort(function (a, b) {\r\n                      var titleA = a.title;\r\n                      var titleB = b.title;\r\n                      if (titleA < titleB) {\r\n                        return -1;\r\n                      }\r\n                      if (titleA > titleB) {\r\n                        return 1;\r\n                      }\r\n                      return 0;\r\n                    })\r\n                    .map((game) => (\r\n                      <>\r\n                        <option value={game.title} key={game.id}>\r\n                          {game.title}\r\n                        </option>\r\n                      </>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"create__form-info\">\r\n              <label className=\"create__form-label\" htmlFor=\"skill\">\r\n                Skill\r\n              </label>\r\n              <select className=\"create__form-select\" onChange={(event) => setSkill(event.target.value)} id=\"skill\" name=\"skill\">\r\n                <option value=\"\">Please select...</option>\r\n                <option value=\"Learning\">Learning</option>\r\n                <option value=\"Advanced\">Advanced</option>\r\n                <option value=\"Pro\">Pro</option>\r\n              </select>\r\n\r\n              <label className=\"create__form-label\" htmlFor=\"description\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                className=\"create__form-input\"\r\n                type=\"text\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                onChange={(event) => setDescription(event.target.value)}\r\n                placeholder=\"Enter a description here...\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"create__form-error-container\">\r\n            <p className=\"create__form-error\">{validationError}</p>\r\n          </div>\r\n          <div className=\"create__button-container\">\r\n            <button className=\"create__button-submit\" type=\"submit\">\r\n              SUBMIT\r\n            </button>\r\n            <a href=\"/\" className=\"create__button-cancel\">\r\n              CANCEL\r\n            </a>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\Home\\Home.jsx",["69","70"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Home.scss\";\r\nimport fire from \"../../config/Fire\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ActivityList from \"../../components/ActivityList/ActivityList\";\r\nimport GameList from \"../../components/GameList/GameList\";\r\n\r\nfunction Home() {\r\n  const [games, setGames] = useState([]);\r\n  const [activities, setActivities] = useState([]);\r\n  const db = fire.firestore();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [clickedGames, setClickedGames] = useState(\"All\");\r\n\r\n  // function allGamesFunction() {\r\n  //   let allGames = games.map((game) => game.title);\r\n  //   return allGames;\r\n  // }\r\n\r\n  // FUNCTION TO GET ALL ACTIVITIES AND USE SELECTED GAMES TO FILTER ACTIVITIES DISPLAYED\r\n  function getActivities() {\r\n    if (clickedGames === \"All\") {\r\n      return db\r\n        .collection(\"activities\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((querySnapshot) => {\r\n          let posts = [];\r\n\r\n          querySnapshot.forEach((doc) => {\r\n            posts.push({\r\n              ...doc.data(),\r\n              timestamp: timeSince(doc.data().timestamp.seconds * 1000),\r\n              id: doc.id,\r\n            });\r\n          });\r\n          setActivities(posts);\r\n        });\r\n    } else {\r\n      return db\r\n        .collection(\"activities\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .where(\"selectedGame\", \"==\", clickedGames)\r\n        .onSnapshot((querySnapshot) => {\r\n          let posts = [];\r\n\r\n          querySnapshot.forEach((doc) => {\r\n            posts.push({\r\n              ...doc.data(),\r\n              timestamp: timeSince(doc.data().timestamp.seconds * 1000),\r\n              id: doc.id,\r\n            });\r\n          });\r\n          setActivities(posts);\r\n        });\r\n    }\r\n  }\r\n\r\n  // FUNCTION TO GET GAME COLLECTION DATA\r\n  function getGames() {\r\n    db.collection(\"games\")\r\n      .orderBy(\"title\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const items = querySnapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\r\n        setGames(items);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getGames();\r\n    return getActivities();\r\n  }, [clickedGames]);\r\n\r\n  // FUNCTION THAT HANDLES ONCLICK ON GAMES\r\n  const clickGamesHandler = (id) => {\r\n    setClickedGames(id);\r\n  };\r\n\r\n  // FUNCTION TO CHANGE TIMESTAMP TO \"TIME SINCE\" POSTED\r\n  const timeSince = (date) => {\r\n    let currentTime = Date.now();\r\n    let difference = currentTime - date;\r\n    let num = 0;\r\n\r\n    const minute = 60000;\r\n    const hour = 3600000;\r\n    const day = 86400000;\r\n    const week = 604800000;\r\n    const month = 2592000000;\r\n    const year = 31556952000;\r\n\r\n    const timeBeforeNow = \"moments ago\";\r\n\r\n    if (difference < minute) {\r\n      return timeBeforeNow;\r\n    } else if (difference < hour) {\r\n      num = Math.floor(difference / minute);\r\n      return num === 1 ? `${num} min ago` : `${num} mins ago`;\r\n    } else if (difference < day) {\r\n      num = Math.floor(difference / hour);\r\n      return num === 1 ? `${num} hour ago` : `${num} hours ago`;\r\n    } else if (difference < week) {\r\n      num = Math.floor(difference / day);\r\n      return num === 1 ? `${num} day ago` : `${num} days ago`;\r\n    } else if (difference < month) {\r\n      num = Math.floor(difference / week);\r\n      return num === 1 ? `${num} week ago` : `${num} weeks ago`;\r\n    } else if (difference < year) {\r\n      num = Math.floor(difference / month);\r\n      return num === 1 ? `${num} month ago` : `${num} months ago`;\r\n    } else if (difference > year) {\r\n      num = Math.floor(difference / year);\r\n      return num === 1 ? `${num} year ago` : `${num} years ago`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home__utility\">\r\n        <input\r\n          className=\"home__search\"\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          onChange={(event) => {\r\n            setSearchTerm(event.target.value);\r\n          }}\r\n        />\r\n        <Link to=\"/create\">\r\n          <button className=\"home__create-button\">+</button>\r\n        </Link>\r\n      </div>\r\n      <div className=\"home__gamelist\">\r\n        {games\r\n          .filter((val) => {\r\n            if (searchTerm === \"\") {\r\n              return val;\r\n            } else if (val.title.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n              return val;\r\n            }\r\n          })\r\n          .map((game) => (\r\n            <GameList key={game.id} gameList={game} clickGamesHandler={clickGamesHandler} />\r\n          ))}\r\n      </div>\r\n      <h1 className=\"home__posts-header\">\r\n        {clickedGames} - {activities.length} posts\r\n      </h1>\r\n      <div className=\"home__feed\">\r\n        {activities.map((activity) => (\r\n          <Link className=\"home__activitylist-link\" to={`/activities/${activity.id}`}>\r\n            <ActivityList key={activity.id} activityList={activity} timeSince={timeSince} games={games} />\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\Login\\Login.jsx",[],"C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\components\\ActivityList\\ActivityList.jsx",["71","72"],"import React, { useEffect } from \"react\";\r\nimport \"./ActivityList.scss\";\r\n\r\nexport default function ActivityList({ activityList, games, username }) {\r\n  let { id, selectedGame, host, skill, timestamp, description } = activityList;\r\n\r\n  // FUNCTION TO RENDER GAMES\r\n  function renderSelectedGame() {\r\n    if (games && games.length !== 0 && selectedGame !== \"\") {\r\n      const current = games.find((game) => game.title === selectedGame);\r\n      return <img className=\"activitylist__image\" src={current.imageUrl} />;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    renderSelectedGame();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={host !== username ? \"activitylist\" : \"activitylist-two\"} key={id}>\r\n      <div className=\"activitylist__info-container\">\r\n        <div className=\"activitylist__user-date\">\r\n          <h3 className=\"activitylist__host\">{host}</h3>\r\n          <div className=\"activitylist__info-secondary\">\r\n            <h4 className=\"activitylist__skill\">{skill}</h4>\r\n            <h4 className=\"activitylist__bullet\">•</h4>\r\n            <h4 className=\"activitylist__info\">{timestamp}</h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"activitylist__description-container\">\r\n          <h4 className=\"activitylist__description\">{description}</h4>\r\n        </div>\r\n      </div>\r\n      <div className=\"activitylist__game-container\">{renderSelectedGame()}</div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\components\\GameList\\GameList.jsx",["73"],"import React from \"react\";\r\nimport \"./GameList.scss\";\r\n\r\nexport default function GameList({ gameList, clickGamesHandler }) {\r\n  const { id, imageUrl, title } = gameList;\r\n\r\n  return (\r\n    <div\r\n      className=\"games__card\"\r\n      key={id}\r\n      id={title}\r\n      onClick={() => {\r\n        clickGamesHandler(title);\r\n      }}\r\n    >\r\n      <img className=\"games__image\" src={imageUrl} />\r\n      <h2 className=\"games__title\">{title}</h2>\r\n    </div>\r\n  );\r\n}\r\n",["74","75"],"C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\ViewActivity\\ViewActivity.jsx",["76","77","78","79"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport fire from \"../../config/Fire\";\r\nimport firebase from \"firebase\";\r\nimport \"./ViewActivity.scss\";\r\n\r\nexport default function ViewActivity({ user, username }) {\r\n  const { id } = useParams();\r\n  const db = fire.firestore();\r\n  const [activity, setActivity] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [activityJoined, setActivityJoined] = useState(false);\r\n  const [joining, setJoining] = useState(false);\r\n  const [games, setGames] = useState([]);\r\n  const history = useHistory();\r\n\r\n  // GET FUNCTION TO PULL THE FIELDS OF THE REQUESTED ACTIVITY\r\n  const getActivity = () => {\r\n    return db.doc(`activities/${id}`).onSnapshot((document) => {\r\n      if (document.exists) {\r\n        setActivity({ ...document.data(), timestamp: timeSince(document.data().timestamp.seconds * 1000) });\r\n        setActivityJoined(!!document.data()[user.uid]);\r\n      }\r\n    });\r\n  };\r\n\r\n  // FUNCTION TO CHANGE TIMESTAMP\r\n  const timeSince = (date) => {\r\n    let currentTime = Date.now();\r\n    let difference = currentTime - date;\r\n    let num = 0;\r\n\r\n    const minute = 60000;\r\n    const hour = 3600000;\r\n    const day = 86400000;\r\n    const week = 604800000;\r\n    const month = 2592000000;\r\n    const year = 31556952000;\r\n\r\n    const timeBeforeNow = \"moments ago\";\r\n\r\n    if (difference < minute) {\r\n      return timeBeforeNow;\r\n    } else if (difference < hour) {\r\n      num = Math.floor(difference / minute);\r\n      return num === 1 ? `${num} min ago` : `${num} mins ago`;\r\n    } else if (difference < day) {\r\n      num = Math.floor(difference / hour);\r\n      return num === 1 ? `${num} hour ago` : `${num} hours ago`;\r\n    } else if (difference < week) {\r\n      num = Math.floor(difference / day);\r\n      return num === 1 ? `${num} day ago` : `${num} days ago`;\r\n    } else if (difference < month) {\r\n      num = Math.floor(difference / week);\r\n      return num === 1 ? `${num} week ago` : `${num} weeks ago`;\r\n    } else if (difference < year) {\r\n      num = Math.floor(difference / month);\r\n      return num === 1 ? `${num} month ago` : `${num} months ago`;\r\n    } else if (difference > year) {\r\n      num = Math.floor(difference / year);\r\n      return num === 1 ? `${num} year ago` : `${num} years ago`;\r\n    }\r\n  };\r\n\r\n  // FUNCTION TO GET GAMES COLLECTION DATA\r\n  function getGames() {\r\n    db.collection(\"games\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const items = querySnapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\r\n        setGames(items);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getGames();\r\n  }, []);\r\n\r\n  // FUNCTION TO GET MESSAGES\r\n  const getMessages = () => {\r\n    return db\r\n      .doc(`activities/${id}`)\r\n      .collection(\"messages\")\r\n      .orderBy(\"createdAt\")\r\n      .limit(100)\r\n      .onSnapshot((querySnapshot) => {\r\n        const data = querySnapshot.docs.map((doc) => ({\r\n          ...doc.data(),\r\n          id: doc.id,\r\n        }));\r\n        setMessages(data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const messages = getMessages();\r\n      const activity = getActivity();\r\n\r\n      const unsubscribe = () => {\r\n        messages();\r\n        activity();\r\n      };\r\n      return unsubscribe;\r\n    }\r\n  }, []);\r\n\r\n  // CHANGE HANDLER FOR NEW MESSAGES\r\n  const handleOnChange = (event) => {\r\n    setNewMessage(event.target.value);\r\n  };\r\n\r\n  // SUBMIT HANDLER TO CREATE A NEW MESSAGE\r\n  const handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    db.doc(`activities/${id}`).collection(\"messages\").add({\r\n      text: newMessage,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      username,\r\n    });\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  // DELETE FUNCTION\r\n  function deleteActivity() {\r\n    db.collection(\"activities\")\r\n      .doc(id)\r\n      .delete()\r\n      .then((res) => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // JOIN LOBBY FUNCTION\r\n  function joinLobbyHandler() {\r\n    setJoining(true);\r\n    db.collection(\"activities\")\r\n      .doc(id)\r\n      .update({ [user.uid]: true })\r\n      .then((res) => {\r\n        setJoining(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // LEAVE LOBBY FUNCTION\r\n  function leaveLobbyHandler() {\r\n    setJoining(true);\r\n    db.collection(\"activities\")\r\n      .doc(id)\r\n      .update({ [user.uid]: false })\r\n      .then((res) => {\r\n        setJoining(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // FUNCTION THAT INFORMS NON-HOST USER THEY ARE IN THE LOBBY\r\n  function joined() {\r\n    if (user.uid === activity.hostId) {\r\n      return;\r\n    } else {\r\n      return activityJoined ? <div>{username} has joined the lobby.</div> : \"\";\r\n    }\r\n  }\r\n\r\n  // FUNCTION THAT WILL DISPLAY JOIN/LEAVE LOBBY BUTTON FOR NON-HOST\r\n  function lobbyButton() {\r\n    if (user.uid === activity.hostId) {\r\n      return;\r\n    } else {\r\n      return activity[user.uid] !== true ? (\r\n        <button className=\"view__button-join\" onClick={() => joinLobbyHandler(activity)} disabled={joining}>\r\n          Join Lobby\r\n        </button>\r\n      ) : (\r\n        <button className=\"view__button-leave\" onClick={() => leaveLobbyHandler(activity)} disabled={joining}>\r\n          Leave Lobby\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  function renderSelectedGame() {\r\n    if (games && games.length !== 0 && activity.length !== 0 && activity.selectedGame !== \"\") {\r\n      const current = games.find((game) => game.title === activity.selectedGame);\r\n\r\n      return <img className=\"activitylist__image\" src={current.imageUrl} />;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    renderSelectedGame();\r\n  }, []);\r\n\r\n  if (!user) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"view\">\r\n        <div className=\"view__header-container\">\r\n          <h1 className=\"view__header\">View Activity</h1>\r\n        </div>\r\n        <div className=\"view__activitylist\" key={id}>\r\n          <div className=\"view__info-container\">\r\n            <div className=\"view__user-date\">\r\n              <h3 className=\"view__host\">{activity.host}</h3>\r\n              <div className=\"view__info-secondary\">\r\n                <h5 className=\"view__skill\">{activity.skill}</h5>\r\n                <h4 className=\"view__bullet\">•</h4>\r\n                <h5 className=\"view__info\">{activity.timestamp}</h5>\r\n              </div>\r\n            </div>\r\n            <div className=\"view__description-container\">\r\n              <h4 className=\"view__description\">{activity.description}</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"view__game-container\">{renderSelectedGame()}</div>\r\n        </div>\r\n        {joined()}\r\n      </div>\r\n      <div className=\"view__button-container\">\r\n        {activity.hostId === user.uid ? (\r\n          <Link to={`/activities/${id}/edit`}>\r\n            <button className=\"view__button-edit\">EDIT</button>\r\n          </Link>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {activity.hostId === user.uid ? (\r\n          <button className=\"view__button-delete\" onClick={() => deleteActivity(activity)}>\r\n            DELETE\r\n          </button>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {lobbyButton()}\r\n      </div>\r\n      {activity.hostId === user.uid || activity[user.uid] ? (\r\n        <>\r\n          <div className=\"view__header-container\">\r\n            <h2 className=\"view__header view__header-conversation\">Conversation</h2>\r\n          </div>\r\n          <div className=\"view__chat\">\r\n            <ul className=\"view__chat-boxes\">\r\n              {messages.map((message) => (\r\n                <li className={message.username === username ? \"view__sent\" : \"view__received\"} key={message.id}>\r\n                  {message.username}: {message.text}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <form className=\"view__form\" onSubmit={handleOnSubmit}>\r\n              <input className=\"view__form-input\" type=\"text\" value={newMessage} onChange={handleOnChange} placeholder=\"Chat with the lobby here...\" />\r\n\r\n              <button className=\"view__form-send\" type=\"submit\" disabled={!newMessage}>\r\n                Send\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\Signup\\Signup.jsx",[],"C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\EditActivity\\EditActivity.jsx",["80","81","82"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport fire from \"../../config/Fire\";\r\nimport firebase from \"firebase\";\r\nimport \"./EditActivity.scss\";\r\n\r\nexport default function EditActivity() {\r\n  const { id } = useParams();\r\n  const db = fire.firestore();\r\n  const [activity, setActivity] = useState([]);\r\n  const [games, setGames] = useState([]);\r\n  const [selectedGame, setSelectedGame] = useState(\"\");\r\n  const [skill, setSkill] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [validationError, setValidationError] = useState(\"\");\r\n  const ref = firebase.firestore().collection(\"activities\");\r\n  const history = useHistory();\r\n\r\n  // GET FUNCTION TO PULL THE FIELDS OF THE REQUESTED ACTIVITY\r\n  function getActivity() {\r\n    db.doc(`activities/${id}`)\r\n      .get()\r\n      .then((document) => {\r\n        setActivity({ ...document.data(), timestamp: document.data().timestamp.toDate() });\r\n        setDescription(document.data().description);\r\n        setSkill(document.data().skill);\r\n        setSelectedGame(document.data().selectedGame);\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Error getting documents: ${error}`);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getActivity();\r\n  }, []);\r\n\r\n  // GET FUNCTION TO PULL THE FIELDS OF THE REQUESTED ACTIVITY\r\n  function getGames() {\r\n    db.collection(\"games\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const items = querySnapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\r\n        setGames(items);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (games.length === 0) {\r\n      getGames();\r\n    }\r\n  }, []);\r\n\r\n  // EDIT FUNCTION\r\n  function editActivity(event) {\r\n    event.preventDefault();\r\n\r\n    if (selectedGame === \"\") {\r\n      return setValidationError(\"Please select a game\");\r\n    }\r\n\r\n    if (skill === \"\") {\r\n      return setValidationError(\"Please choose a skill level\");\r\n    }\r\n\r\n    if (description === \"\") {\r\n      return setValidationError(\"Please provide a brief description\");\r\n    }\r\n\r\n    ref\r\n      .doc(`${id}`)\r\n      .update({\r\n        skill,\r\n        description,\r\n        selectedGame,\r\n      })\r\n      .then((res) => {\r\n        history.push(`/activities/${id}`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // FORM CHANGE HANDLERS\r\n  const handleDescriptionChange = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  const handleSkillChange = (event) => {\r\n    setSkill(event.target.value);\r\n  };\r\n\r\n  const handleGameChange = (event) => {\r\n    setSelectedGame(event.target.value);\r\n  };\r\n\r\n  // FUNCTION TO RENDER A GAME PICTURE BASED ON GAME SELECTED IN DROP DOWN MENU\r\n  function renderSelectedGame() {\r\n    if (selectedGame !== \"\" && games.length !== 0) {\r\n      const current = games.find((game) => game.title === selectedGame);\r\n      return <img className=\"create__form-image\" src={current.imageUrl} />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"edit\" key={activity.id}>\r\n        <div className=\"edit__header-container\">\r\n          <h1 className=\"edit__header\">Edit Activity</h1>\r\n        </div>\r\n        <form className=\"edit__form\" onSubmit={editActivity}>\r\n          <div className=\"edit__form-container\">\r\n            <div className=\"activity__form-game\">\r\n              <label className=\"edit__form-label\" htmlFor=\"game\">\r\n                Game:\r\n              </label>\r\n              <div className=\"edit__form-game-line\">\r\n                {renderSelectedGame()}\r\n                <select className=\"edit__form-select\" value={selectedGame} onChange={handleGameChange} name=\"game\" id=\"game\">\r\n                  {games\r\n                    .filter((game) => (game.title.includes(\"All\") ? \"\" : game.title))\r\n                    .map((game) => (\r\n                      <option value={game.title} key={game.id}>\r\n                        {game.title}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <label className=\"edit__form-label\" htmlFor=\"skill\">\r\n              Skill:\r\n            </label>\r\n            <select className=\"edit__form-select\" onChange={handleSkillChange} id=\"skill\" name=\"skill\">\r\n              <option value=\"Learning\">Learning</option>\r\n              <option value=\"Advanced\">Advanced</option>\r\n              <option value=\"Pro\">Pro</option>\r\n            </select>\r\n\r\n            <label className=\"edit__form-label\" htmlFor=\"description\">\r\n              Description:\r\n            </label>\r\n            <textarea className=\"edit__form-input\" type=\"text\" id=\"description\" name=\"description\" value={description} onChange={handleDescriptionChange} />\r\n          </div>\r\n          <div className=\"edit__form-error-container\">\r\n            <p className=\"edit__form-error\">{validationError}</p>\r\n          </div>\r\n          <div className=\"edit__button-container\">\r\n            <button className=\"edit__button-submit\" type=\"submit\">\r\n              SUBMIT\r\n            </button>\r\n            <a href=\"/\" className=\"edit__button-cancel\">\r\n              CANCEL\r\n            </a>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\MyActivities\\MyActivities.jsx",["83","84","85"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport fire from \"../../config/Fire\";\r\nimport ActivityList from \"../../components/ActivityList/ActivityList\";\r\nimport \"./MyActivities.scss\";\r\n\r\nfunction MyActivities({ user, username }) {\r\n  const [games, setGames] = useState([]);\r\n  const db = fire.firestore();\r\n  const [activities, setActivities] = useState([]);\r\n\r\n  // GET FUNCTION TO PULL THE FIELDS OF THE REQUESTED ACTIVITY\r\n  function getActivities() {\r\n    Promise.all([\r\n      db\r\n        .collection(\"activities\")\r\n        .where(\"hostId\", \"==\", user.uid)\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .get()\r\n        .then((activities) => {\r\n          return activities.docs.map((doc) => ({ ...doc.data(), timestamp: timeSince(doc.data().timestamp.seconds * 1000), id: doc.id }));\r\n        }),\r\n      db\r\n        .collection(\"activities\")\r\n        .where(user.uid, \"==\", true)\r\n        .get()\r\n        .then((activities) => {\r\n          return activities.docs.map((doc) => ({ ...doc.data(), timestamp: timeSince(doc.data().timestamp.seconds * 1000), id: doc.id }));\r\n        }),\r\n    ]).then((responses) => {\r\n      setActivities([...responses[0], ...responses[1]]);\r\n    });\r\n  }\r\n\r\n  // FUNCTION TO GET GAMES COLLECTION DATA\r\n  function getGames() {\r\n    db.collection(\"games\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const items = querySnapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\r\n        setGames(items);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      getActivities();\r\n      getGames();\r\n    }\r\n  }, []);\r\n\r\n  // FUNCTION TO CHANGE TIMESTAMP\r\n  const timeSince = (date) => {\r\n    let currentTime = Date.now();\r\n    let difference = currentTime - date;\r\n    let num = 0;\r\n\r\n    const minute = 60000;\r\n    const hour = 3600000;\r\n    const day = 86400000;\r\n    const week = 604800000;\r\n    const month = 2592000000;\r\n    const year = 31556952000;\r\n\r\n    const timeBeforeNow = \"moments ago\";\r\n\r\n    if (difference < minute) {\r\n      return timeBeforeNow;\r\n    } else if (difference < hour) {\r\n      num = Math.floor(difference / minute);\r\n      return num === 1 ? `${num} min ago` : `${num} mins ago`;\r\n    } else if (difference < day) {\r\n      num = Math.floor(difference / hour);\r\n      return num === 1 ? `${num} hour ago` : `${num} hours ago`;\r\n    } else if (difference < week) {\r\n      num = Math.floor(difference / day);\r\n      return num === 1 ? `${num} day ago` : `${num} days ago`;\r\n    } else if (difference < month) {\r\n      num = Math.floor(difference / week);\r\n      return num === 1 ? `${num} week ago` : `${num} weeks ago`;\r\n    } else if (difference < year) {\r\n      num = Math.floor(difference / month);\r\n      return num === 1 ? `${num} month ago` : `${num} months ago`;\r\n    } else if (difference > year) {\r\n      num = Math.floor(difference / year);\r\n      return num === 1 ? `${num} year ago` : `${num} years ago`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"personal\">\r\n      <div className=\"personal__header-container\">\r\n        <h1 className=\"personal__header\">My Activities</h1>\r\n      </div>\r\n      <div className=\"personal__feed\">\r\n        {activities.map((activity) => (\r\n          <Link className=\"personal__activitylist-link\" to={`/activities/${activity.id}`}>\r\n            <ActivityList user={user} key={activity.id} activityList={activity} games={games} timeSince={timeSince} username={username} />\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyActivities;\r\n",{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":52,"column":6,"nodeType":"92","endLine":52,"endColumn":12,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":57,"column":14,"nodeType":"96","endLine":57,"endColumn":75},{"ruleId":"90","severity":1,"message":"97","line":65,"column":6,"nodeType":"92","endLine":65,"endColumn":8,"suggestions":"98"},{"ruleId":"90","severity":1,"message":"99","line":72,"column":6,"nodeType":"92","endLine":72,"endColumn":20,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":134,"column":25,"nodeType":"103","messageId":"104","endLine":134,"endColumn":27},{"ruleId":"94","severity":1,"message":"95","line":11,"column":14,"nodeType":"96","endLine":11,"endColumn":76},{"ruleId":"90","severity":1,"message":"105","line":17,"column":6,"nodeType":"92","endLine":17,"endColumn":8,"suggestions":"106"},{"ruleId":"94","severity":1,"message":"95","line":16,"column":7,"nodeType":"96","endLine":16,"endColumn":54},{"ruleId":"86","replacedBy":"107"},{"ruleId":"88","replacedBy":"108"},{"ruleId":"90","severity":1,"message":"109","line":78,"column":6,"nodeType":"92","endLine":78,"endColumn":8,"suggestions":"110"},{"ruleId":"90","severity":1,"message":"111","line":107,"column":6,"nodeType":"92","endLine":107,"endColumn":8,"suggestions":"112"},{"ruleId":"94","severity":1,"message":"95","line":197,"column":14,"nodeType":"96","endLine":197,"endColumn":76},{"ruleId":"90","severity":1,"message":"105","line":203,"column":6,"nodeType":"92","endLine":203,"endColumn":8,"suggestions":"113"},{"ruleId":"90","severity":1,"message":"114","line":36,"column":6,"nodeType":"92","endLine":36,"endColumn":8,"suggestions":"115"},{"ruleId":"90","severity":1,"message":"97","line":52,"column":6,"nodeType":"92","endLine":52,"endColumn":8,"suggestions":"116"},{"ruleId":"94","severity":1,"message":"95","line":102,"column":14,"nodeType":"96","endLine":102,"endColumn":75},{"ruleId":"117","severity":1,"message":"118","line":2,"column":16,"nodeType":"119","messageId":"120","endLine":2,"endColumn":25},{"ruleId":"117","severity":1,"message":"121","line":2,"column":27,"nodeType":"119","messageId":"120","endLine":2,"endColumn":37},{"ruleId":"90","severity":1,"message":"122","line":50,"column":6,"nodeType":"92","endLine":50,"endColumn":8,"suggestions":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authListenerAdded', 'db', and 'username'. Either include them or remove the dependency array.","ArrayExpression",["126"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'games.length' and 'getGames'. Either include them or remove the dependency array.",["127"],"React Hook useEffect has missing dependencies: 'getActivities' and 'getGames'. Either include them or remove the dependency array.",["128"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'renderSelectedGame'. Either include it or remove the dependency array.",["129"],["124"],["125"],"React Hook useEffect has a missing dependency: 'getGames'. Either include it or remove the dependency array.",["130"],"React Hook useEffect has missing dependencies: 'getActivity', 'getMessages', and 'user'. Either include them or remove the dependency array.",["131"],["132"],"React Hook useEffect has a missing dependency: 'getActivity'. Either include it or remove the dependency array.",["133"],["134"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'getActivities', 'getGames', and 'user'. Either include them or remove the dependency array.",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"142","fix":"148"},{"desc":"149","fix":"150"},{"desc":"138","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [authListenerAdded, db, user, username]",{"range":"154","text":"155"},"Update the dependencies array to be: [games.length, getGames]",{"range":"156","text":"157"},"Update the dependencies array to be: [clickedGames, getActivities, getGames]",{"range":"158","text":"159"},"Update the dependencies array to be: [renderSelectedGame]",{"range":"160","text":"161"},"Update the dependencies array to be: [getGames]",{"range":"162","text":"163"},"Update the dependencies array to be: [getActivity, getMessages, user]",{"range":"164","text":"165"},{"range":"166","text":"161"},"Update the dependencies array to be: [getActivity]",{"range":"167","text":"168"},{"range":"169","text":"157"},"Update the dependencies array to be: [getActivities, getGames, user]",{"range":"170","text":"171"},[1599,1605],"[authListenerAdded, db, user, username]",[2017,2019],"[games.length, getGames]",[2172,2186],"[clickedGames, getActivities, getGames]",[582,584],"[renderSelectedGame]",[2736,2738],"[getGames]",[3383,3385],"[getActivity, getMessages, user]",[5878,5880],[1302,1304],"[getActivity]",[1691,1693],[1638,1640],"[getActivities, getGames, user]"]