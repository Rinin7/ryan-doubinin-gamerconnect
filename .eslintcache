[{"C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\index.js":"1","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\components\\App.js":"2","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\config\\Fire.js":"3","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\CreateActivity\\CreateActivity.jsx":"4","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\Home\\Home.jsx":"5","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\Login\\Login.jsx":"6","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\components\\ActivityList\\ActivityList.jsx":"7","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\components\\Header\\Header.jsx":"8","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\components\\GameList\\GameList.jsx":"9","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\ViewActivity\\ViewActivity.jsx":"10","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\Signup\\Signup.jsx":"11","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\EditActivity\\EditActivity.jsx":"12","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\MyActivities\\MyActivities.jsx":"13"},{"size":208,"mtime":1611113879909,"results":"14","hashOfConfig":"15"},{"size":3523,"mtime":1612130190981,"results":"16","hashOfConfig":"15"},{"size":495,"mtime":1611427693251,"results":"17","hashOfConfig":"15"},{"size":4389,"mtime":1612132077759,"results":"18","hashOfConfig":"15"},{"size":6141,"mtime":1612145659553,"results":"19","hashOfConfig":"15"},{"size":2441,"mtime":1612130920585,"results":"20","hashOfConfig":"15"},{"size":1570,"mtime":1612142204053,"results":"21","hashOfConfig":"15"},{"size":1797,"mtime":1612130262590,"results":"22","hashOfConfig":"15"},{"size":493,"mtime":1611987808063,"results":"23","hashOfConfig":"15"},{"size":6736,"mtime":1612044571124,"results":"24","hashOfConfig":"15"},{"size":3906,"mtime":1612137362414,"results":"25","hashOfConfig":"15"},{"size":4956,"mtime":1612132506047,"results":"26","hashOfConfig":"15"},{"size":3655,"mtime":1612142056843,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"khay13",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\index.js",[],["63","64"],"C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\components\\App.js",["65"],"import React, { useState, useEffect } from \"react\";\nimport fire from \"../config/Fire\";\nimport Home from \"../Pages/Home/Home\";\nimport CreateActivity from \"../Pages/CreateActivity/CreateActivity\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Login from \"../Pages/Login/Login\";\nimport ViewActivity from \"../Pages/ViewActivity/ViewActivity\";\nimport EditActivity from \"../Pages/EditActivity/EditActivity\";\nimport MyActivities from \"../Pages/MyActivities/MyActivities\";\nimport Signup from \"../Pages/Signup/Signup\";\nimport Header from \"../components/Header/Header\";\n\nfunction App() {\n  const [user, setUser] = useState(undefined);\n  const [authListenerAdded, setAuthListenerAdded] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const db = fire.firestore();\n  // const [newUsername, setNewUsername] = useState(undefined);\n  // const [signUpSuccess, setSignUpSuccess] = useState(false);\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n        localStorage.setItem(\"isAuthenticated\", \"true\");\n        // console.log(\"localStorage\", localStorage.getItem(\"isAuthenticated\"));\n        // console.log({ user });\n        // console.log(newUsername);\n      } else {\n        setUser(null);\n        localStorage.removeItem(\"isAuthenticated\");\n        setUsername(\"\");\n      }\n    });\n\n    setAuthListenerAdded(true);\n  };\n\n  useEffect(() => {\n    if (!authListenerAdded) {\n      authListener();\n    }\n\n    if (user && username === \"\") {\n      db.doc(`users/${user.uid}`)\n        .get()\n        .then((documentSnapshot) => {\n          const data = documentSnapshot.data();\n          if (data && data.username) {\n            setUsername(documentSnapshot.data().username);\n          }\n        });\n    }\n\n    // fire.auth().currentUser\n  }, [user]);\n\n  const handleLogin = (user) => {\n    setUser(user);\n  };\n\n  // const newUserHandler = (username) => {\n  //   setNewUsername(username);\n  //   console.log(\"from newUserHandler\", username);\n  // };\n\n  // const newUserSuccessHandler = () => {\n  //   setSignUpSuccess(true);\n  // };\n\n  function PrivateRoute({ component: Component, ...rest }) {\n    return <Route {...rest} render={(props) => (localStorage.isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />)} />;\n  }\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header username={username} user={user} />\n        <Switch>\n          <Route path=\"/login\" exact component={(routerProps) => <Login {...routerProps} user={user} handler={handleLogin} />} />\n          <Route path=\"/signup\" exact component={(routerProps) => <Signup {...routerProps} user={user} handler={handleLogin} />} />\n          <PrivateRoute path=\"/\" exact component={(routerProps) => <Home {...routerProps} user={user} />} />\n          <PrivateRoute path=\"/myactivities\" exact component={(routerProps) => <MyActivities {...routerProps} user={user} username={username} />} />\n          <PrivateRoute path=\"/create\" exact component={(routerProps) => <CreateActivity {...routerProps} user={user} username={username} />} />\n          <PrivateRoute path=\"/activities/:id\" exact component={(routerProps) => <ViewActivity {...routerProps} user={user} username={username} />} />\n          <PrivateRoute path=\"/activities/:id/edit\" exact component={(routerProps) => <EditActivity {...routerProps} user={user} username={username} />} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\config\\Fire.js",[],"C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\CreateActivity\\CreateActivity.jsx",["66","67","68","69"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport fire from \"../../config/Fire\";\r\nimport firebase from \"firebase\";\r\nimport \"./CreateActivity.scss\";\r\n\r\nexport default function CreateActivity({ user, username }) {\r\n  const db = fire.firestore();\r\n  const history = useHistory();\r\n  // const [user, setUser] = useState(\"\");\r\n  const [games, setGames] = useState([]);\r\n  const [selectedGame, setSelectedGame] = useState(\"\");\r\n  const [gamePicture, setGamePicture] = useState(\"\");\r\n  // const [title, setTitle] = useState(\"\");\r\n  const [skill, setSkill] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp();\r\n  // const timestamp = new Date(timeInMilliseconds).toLocaleString();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    db.collection(\"activities\")\r\n      .add({ skill, description, timestamp, selectedGame, host: username, hostId: user.uid })\r\n      .then((res) => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  function getGames() {\r\n    db.collection(\"games\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const items = querySnapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\r\n        setGames(items);\r\n        console.log(items);\r\n      });\r\n  }\r\n\r\n  function renderSelectedGame() {\r\n    if (selectedGame !== \"\") {\r\n      const current = games.find((game) => game.title === selectedGame);\r\n      return <img className=\"create__form-image\" src={current.imageUrl} />;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (games.length === 0) {\r\n      getGames();\r\n      // getGameImage();\r\n    }\r\n    console.log(games);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"create\">\r\n        <div className=\"create__header-container\">\r\n          <h1 className=\"create__header\">Create Activity</h1>\r\n        </div>\r\n        <form className=\"create__form\" onSubmit={handleSubmit}>\r\n          <div className=\"create__form-container\">\r\n            <div className=\"create__form-game\">\r\n              <label className=\"create__form-label\" htmlFor=\"game\">\r\n                Game\r\n              </label>\r\n              <div className=\"create__form-game-line\">\r\n                {renderSelectedGame()}\r\n                <select className=\"create__form-select\" value={selectedGame} onChange={(event) => setSelectedGame(event.target.value)} name=\"game\" id=\"game\">\r\n                  <option value=\"\">Please select...</option>\r\n                  {games\r\n                    .filter((game) => (game.title.includes(\"All\") ? \"\" : game.title))\r\n                    .map((game) => (\r\n                      <>\r\n                        <option value={game.title} key={game.id}>\r\n                          {game.title}\r\n                        </option>\r\n                      </>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"create__form-info\">\r\n              <label className=\"create__form-label\" htmlFor=\"skill\">\r\n                Skill\r\n              </label>\r\n              <select className=\"create__form-select\" onChange={(event) => setSkill(event.target.value)} id=\"skill\" name=\"skill\">\r\n                <option value=\"\">Please select...</option>\r\n                <option value=\"Learning\">Learning</option>\r\n                <option value=\"Advanced\">Advanced</option>\r\n                <option value=\"Pro\">Pro</option>\r\n              </select>\r\n\r\n              <label className=\"create__form-label\" htmlFor=\"description\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                className=\"create__form-input\"\r\n                type=\"text\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                onChange={(event) => setDescription(event.target.value)}\r\n                placeholder=\"Enter a description here...\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"create__button-container\">\r\n            <button className=\"create__button-submit\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n            <a href=\"/\" className=\"create__button-cancel\">\r\n              CANCEL\r\n            </a>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\Home\\Home.jsx",["70","71","72","73","74","75"],"C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\Login\\Login.jsx",["76","77","78"],"import React, { useRef, useState } from \"react\";\r\nimport \"./Login.scss\";\r\nimport fire from \"../../config/Fire\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const [error, setError] = useState(\"\");\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const history = useHistory();\r\n\r\n  async function login(event) {\r\n    event.preventDefault();\r\n    try {\r\n      setError(\"\");\r\n      await fire.auth().signInWithEmailAndPassword(emailRef.current.value, passwordRef.current.value);\r\n      history.push(\"/\");\r\n    } catch {\r\n      setError(\"Failed to log in\");\r\n    }\r\n  }\r\n\r\n  async function signup(event) {\r\n    event.preventDefault();\r\n    try {\r\n      setError(\"\");\r\n      await fire.auth().createUserWithEmailAndPassword(emailRef.current.value, passwordRef.current.value);\r\n\r\n      history.push(\"/\");\r\n    } catch {\r\n      setError(\"Failed to create an account\");\r\n    }\r\n  }\r\n\r\n  // this.authListener();\r\n\r\n  return (\r\n    <section className=\"login\">\r\n      {/* <Link to=\"/\">Home</Link> */}\r\n      <form className=\"login__form\">\r\n        <h1 className=\"login__header\">Log In</h1>\r\n        <label className=\"login__form-title\" htmlFor=\"email\">\r\n          Email\r\n        </label>\r\n        <input className=\"login__form-input\" type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email\" ref={emailRef} />\r\n        <label className=\"login__form-title\" htmlFor=\"password\">\r\n          Password\r\n        </label>\r\n        <input className=\"login__form-input\" type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\" ref={passwordRef} />\r\n        {/* <label className=\"login__form-title\" htmlFor=\"confirm\">Password Confirmation</label>\r\n          <input className=\"login__form-input\" type=\"password\" value={this.state.confirmPassword} onChange={this.handleChange} id=\"confirm\" name=\"confirm\" placeholder=\"Confirm Password here\" /> */}\r\n        <button className=\"login__form-submit\" type=\"submit\" onClick={login}>\r\n          Log In\r\n        </button>\r\n        {/* <button className=\"login__form-submit\" type=\"submit\" onClick={signup}>\r\n          Sign Up\r\n        </button> */}\r\n      </form>\r\n      <div className=\"login__redirect\">\r\n        <p>\r\n          Don't have an account?{\" \"}\r\n          <a className=\"login__signup-link\" href=\"/signup\">\r\n            Sign Up Here.\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\components\\ActivityList\\ActivityList.jsx",["79","80","81"],"C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\components\\Header\\Header.jsx",["82","83","84"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport fire from \"../../config/Fire\";\r\nimport \"./Header.scss\";\r\nimport gear from \"../../assets/icons/gear3.png\";\r\nimport logo from \"../../assets/logos/GamerConnect.png\";\r\n\r\nexport default function Header({ user, username }) {\r\n  const history = useHistory();\r\n\r\n  function logout() {\r\n    fire.auth().signOut();\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__logo-container\">\r\n        <Link to=\"/\">\r\n          <h2 className=\"header__logo\">GamerConnect</h2>\r\n          {/* <img src={logo} /> */}\r\n        </Link>\r\n        <h3 className=\"header__username\">{username}</h3>\r\n      </div>\r\n      {username ? (\r\n        <>\r\n          <div className=\"header__hamburger\">\r\n            <nav role=\"navigation\" className=\"navigation\">\r\n              <div id=\"menuToggle\">\r\n                <input type=\"checkbox\" />\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <ul id=\"menu\">\r\n                  <Link to=\"/\">\r\n                    <li className=\"navigation__list-item\">Feed</li>\r\n                  </Link>\r\n                  <Link to=\"/myactivities\">\r\n                    <li className=\"navigation__list-item\">My Activities</li>\r\n                  </Link>\r\n                  <Link to={`/create`}>\r\n                    <li className=\"navigation__list-item\">Create</li>\r\n                  </Link>\r\n                  <li onClick={logout} className=\"navigation__list-item\">\r\n                    Logout\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </nav>\r\n          </div>{\" \"}\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </header>\r\n  );\r\n}\r\n","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\components\\GameList\\GameList.jsx",["85","86"],"import React from \"react\";\r\nimport \"./GameList.scss\";\r\n\r\nexport default function GameList({ gameList, clickGamesHandler }) {\r\n  const { id, imageUrl, title } = gameList;\r\n\r\n  return (\r\n    // <div className=\"games\" >\r\n    <div\r\n      className=\"games__card\"\r\n      id={title}\r\n      onClick={() => {\r\n        clickGamesHandler(title);\r\n      }}\r\n    >\r\n      <img className=\"games__image\" src={imageUrl} />\r\n      <h2 className=\"games__title\">{title}</h2>\r\n    </div>\r\n    // </div>\r\n  );\r\n}\r\n","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\ViewActivity\\ViewActivity.jsx",["87"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport fire from \"../../config/Fire\";\r\nimport firebase from \"firebase\";\r\nimport \"./ViewActivity.scss\";\r\n\r\nexport default function ViewActivity({ user, username }) {\r\n  const { id } = useParams();\r\n  const db = fire.firestore();\r\n  const [activity, setActivity] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [activityJoined, setActivityJoined] = useState(false);\r\n  const [joining, setJoining] = useState(false);\r\n  const history = useHistory();\r\n\r\n  // GET FUNCTION TO PULL THE FIELDS OF THE REQUESTED ACTIVITY\r\n  const getActivity = () => {\r\n    console.log(activity);\r\n    console.log(user);\r\n    return db.doc(`activities/${id}`).onSnapshot((document) => {\r\n      if (document.exists) {\r\n        setActivity({ ...document.data(), timestamp: document.data().timestamp.toDate() });\r\n\r\n        setActivityJoined(!!document.data()[user.uid]);\r\n      }\r\n    });\r\n\r\n    // .catch((error) => {\r\n    //   console.log(`Error getting documents: ${error}`);\r\n    // });\r\n  };\r\n\r\n  const getMessages = () => {\r\n    return db\r\n      .doc(`activities/${id}`)\r\n      .collection(\"messages\")\r\n      .orderBy(\"createdAt\")\r\n      .limit(100)\r\n      .onSnapshot((querySnapshot) => {\r\n        const data = querySnapshot.docs.map((doc) => ({\r\n          ...doc.data(),\r\n          id: doc.id,\r\n        }));\r\n        console.log(data);\r\n        setMessages(data);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    console.log(\"useEffect called\");\r\n    if (user) {\r\n      const messages = getMessages();\r\n      const activity = getActivity();\r\n\r\n      const unsubscribe = () => {\r\n        messages();\r\n        activity();\r\n      };\r\n      return unsubscribe;\r\n    }\r\n  }, []);\r\n\r\n  const handleOnChange = (event) => {\r\n    setNewMessage(event.target.value);\r\n  };\r\n\r\n  const handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // if (db) {\r\n    db.doc(`activities/${id}`).collection(\"messages\").add({\r\n      text: newMessage,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      username,\r\n    });\r\n    // }\r\n\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  // DELETE FUNCTION\r\n  function deleteActivity(activity) {\r\n    db.collection(\"activities\")\r\n      .doc(id)\r\n      .delete()\r\n      .then((res) => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // JOIN LOBBY FUNCTION\r\n  function joinLobbyHandler() {\r\n    setJoining(true);\r\n    db.collection(\"activities\")\r\n      .doc(id)\r\n      .update({ [user.uid]: true })\r\n      .then((res) => {\r\n        setJoining(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // LEAVE LOBBY FUNCTION\r\n  function leaveLobbyHandler() {\r\n    setJoining(true);\r\n    db.collection(\"activities\")\r\n      .doc(id)\r\n      .update({ [user.uid]: false })\r\n      .then((res) => {\r\n        setJoining(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // FUNCTION THAT INFORMS NON-HOST USER THEY ARE IN THE LOBBY\r\n  function joined() {\r\n    if (user.uid === activity.hostId) {\r\n      return;\r\n    } else {\r\n      return activityJoined ? <div>{username} has joined the lobby.</div> : \"\";\r\n    }\r\n  }\r\n\r\n  // FUNCTION THAT WILL DISPLAY JOIN/LEAVE LOBBY BUTTON FOR NON-HOST\r\n  function lobbyButton() {\r\n    if (user.uid === activity.hostId) {\r\n      return;\r\n    } else {\r\n      return activity[user.uid] !== true ? (\r\n        <button onClick={() => joinLobbyHandler(activity)} disabled={joining}>\r\n          Join Lobby\r\n        </button>\r\n      ) : (\r\n        <button onClick={() => leaveLobbyHandler(activity)} disabled={joining}>\r\n          Leave Lobby\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (!user) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"view\">\r\n        <h1 className=\"view__header\">View Activity</h1>\r\n        <div className=\"view__content-container\">\r\n          <label className=\"view__subheader\" htmlFor=\"host\">\r\n            Host:\r\n          </label>\r\n          <input className=\"view__input\" type=\"text\" id=\"host\" name=\"host\" value={activity.host} />\r\n          <div className=\"activity__info-container\">\r\n            <label className=\"view__subheader\" htmlFor=\"game\">\r\n              Game:\r\n            </label>\r\n            <input className=\"view__input\" type=\"text\" id=\"game\" name=\"game\" value={activity.selectedGame} />\r\n            <label className=\"view__subheader\" htmlFor=\"timestamp\">\r\n              Posted:\r\n            </label>\r\n            <input className=\"view__input\" type=\"text\" id=\"timestamp\" name=\"timestamp\" value={activity.timestamp} />\r\n          </div>\r\n          <label className=\"view__subheader\" htmlFor=\"skill\">\r\n            Skill:\r\n          </label>\r\n          <input className=\"view__input\" type=\"text\" id=\"skill\" name=\"skill\" value={activity.skill} />\r\n          <label className=\"view__subheader\" htmlFor=\"description\">\r\n            Description:\r\n          </label>\r\n          <input className=\"view__input\" type=\"text\" id=\"description\" name=\"description\" value={activity.description} />\r\n          {/* {activityJoined ? <div>{username} has joined the lobby.</div> : \"\"} */}\r\n          {joined()}\r\n        </div>\r\n        {activity.hostId === user.uid ? (\r\n          <Link to={`/activities/${id}/edit`}>\r\n            <button>Edit</button>\r\n          </Link>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {activity.hostId === user.uid ? <button onClick={() => deleteActivity(activity)}>X</button> : \"\"}\r\n        {/* {activity[user.uid] !== true ? (\r\n          <button onClick={() => joinLobbyHandler(activity)} disabled={joining}>\r\n            Join Lobby\r\n          </button>\r\n        ) : (\r\n          <button onClick={() => leaveLobbyHandler(activity)} disabled={joining}>\r\n            Leave Lobby\r\n          </button>\r\n        )} */}\r\n        {lobbyButton()}\r\n        {activity.hostId === user.uid || activity[user.uid] ? (\r\n          <>\r\n            <h2>Conversation</h2>\r\n            <ul>\r\n              {messages.map((message) => (\r\n                <li key={message.id}>\r\n                  {message.username}: {message.text}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <form onSubmit={handleOnSubmit}>\r\n              <input type=\"text\" value={newMessage} onChange={handleOnChange} placeholder=\"Chat with the lobby here...\" />\r\n              <button type=\"submit\" disabled={!newMessage}>\r\n                Send\r\n              </button>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\Signup\\Signup.jsx",["88","89","90","91","92"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./Signup.scss\";\r\nimport fire from \"../../config/Fire\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Signup({ user }) {\r\n  const db = fire.firestore();\r\n  const [error, setError] = useState(\"\");\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const history = useHistory();\r\n  // const usernameRef = useRef();\r\n  const [username, setUsername] = useState(\"\");\r\n  // const [userId, setUserId] = useState(\"\");\r\n\r\n  async function signupWithEmail(event) {\r\n    // event.preventDefault();\r\n    try {\r\n      setError(\"\");\r\n      await fire\r\n        .auth()\r\n        .createUserWithEmailAndPassword(emailRef.current.value, passwordRef.current.value)\r\n        .then((res) => {\r\n          console.log(res, user, username);\r\n          db.collection(\"users\").doc(user.uid).set({ username: username });\r\n        });\r\n      // newUserSuccessHandler();\r\n    } catch {\r\n      setError(\"Failed to create an account\");\r\n    }\r\n    console.log(user);\r\n  }\r\n\r\n  const createUsername = async () => {\r\n    // console.log(userId);\r\n    // const username = await usernameRef.current.value;\r\n    // await db.collection(\"users\").doc(userId).set({ username: username });\r\n    // console.log(\"usernameRef from createUsername\", usernameRef.current.value);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  function signupActions(event) {\r\n    event.preventDefault();\r\n    fire\r\n      .auth()\r\n      .createUserWithEmailAndPassword(emailRef.current.value, passwordRef.current.value)\r\n      .then((res) => {\r\n        console.log(res, user, username);\r\n        db.collection(\"users\")\r\n          .doc(res.user.uid)\r\n          .set({ username: username })\r\n          .then(() => {\r\n            history.push(\"/\");\r\n          });\r\n      });\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   // setUserId(user && user.uid);\r\n  //   // if (userId) {\r\n  //   //   createUsername();\r\n  //   // }\r\n  //   newUserHandler(username);\r\n  // }, []);\r\n\r\n  const handleUsernameChange = (event) => {\r\n    setUsername(event.target.value);\r\n    // newUserHandler(username);\r\n  };\r\n\r\n  // function passwordHandler(event) {\r\n  //   console.log(event.current.value);\r\n  // }\r\n\r\n  // this.authListener();\r\n  // console.log(this.props);\r\n  return (\r\n    <section className=\"login\">\r\n      {/* <Link to=\"/\">Home</Link> */}\r\n      <form className=\"login__form\">\r\n        <h1 className=\"login__header\">Sign Up</h1>\r\n        <label className=\"login__form-title\" htmlFor=\"email\">\r\n          Email\r\n        </label>\r\n        <input className=\"login__form-input\" type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email here\" ref={emailRef} />\r\n        <label className=\"login__form-title\" htmlFor=\"username\">\r\n          Username\r\n        </label>\r\n        <input className=\"login__form-input\" type=\"text\" id=\"username\" name=\"username\" placeholder=\"Choose a username\" value={username} onChange={handleUsernameChange} />\r\n        <label className=\"login__form-title\" htmlFor=\"password\">\r\n          Password\r\n        </label>\r\n        <input className=\"login__form-input\" type=\"password\" id=\"password\" name=\"password\" placeholder=\"Choose a password\" ref={passwordRef} />\r\n        {/* <label className=\"login__form-title\" htmlFor=\"confirm\">Password Confirmation</label>\r\n          <input className=\"login__form-input\" type=\"password\" value={this.state.confirmPassword} onChange={this.handleChange} id=\"confirm\" name=\"confirm\" placeholder=\"Confirm Password here\" /> */}\r\n        <button className=\"login__form-signup\" type=\"submit\" onClick={signupActions}>\r\n          Sign Up\r\n        </button>\r\n      </form>\r\n      <div className=\"login__redirect\">\r\n        <p>\r\n          Already have an account?{\" \"}\r\n          <a className=\"signup__login-link\" href=\"/\">\r\n            Log In Here.\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\EditActivity\\EditActivity.jsx",["93","94","95","96","97"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport fire from \"../../config/Fire\";\r\nimport firebase from \"firebase\";\r\nimport \"./EditActivity.scss\";\r\n\r\nexport default function EditActivity({ username }) {\r\n  const { id } = useParams();\r\n  const db = fire.firestore();\r\n  const [activity, setActivity] = useState([]);\r\n  const [games, setGames] = useState([]);\r\n  const [selectedGame, setSelectedGame] = useState(\"\");\r\n  const [skill, setSkill] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const ref = firebase.firestore().collection(\"activities\");\r\n  const history = useHistory();\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp();\r\n\r\n  // GET FUNCTION TO PULL THE FIELDS OF THE REQUESTED ACTIVITY\r\n  function getActivity() {\r\n    console.log(id);\r\n    db.doc(`activities/${id}`)\r\n      .get()\r\n      .then((document) => {\r\n        setActivity({ ...document.data(), timestamp: document.data().timestamp.toDate() });\r\n        setDescription(document.data().description);\r\n        setSkill(document.data().skill);\r\n        setSelectedGame(document.data().selectedGame);\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Error getting documents: ${error}`);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getActivity();\r\n    console.log(activity);\r\n  }, []);\r\n\r\n  // GET FUNCTION TO PULL THE FIELDS OF THE REQUESTED ACTIVITY\r\n  function getGames() {\r\n    db.collection(\"games\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const items = querySnapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\r\n        setGames(items);\r\n        console.log(items);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (games.length === 0) {\r\n      getGames();\r\n    }\r\n    console.log(games);\r\n  }, []);\r\n\r\n  // EDIT FUNCTION\r\n  function editActivity(event) {\r\n    event.preventDefault();\r\n\r\n    ref\r\n      .doc(`${id}`)\r\n      .update({\r\n        skill,\r\n        description,\r\n        selectedGame,\r\n      })\r\n      .then((res) => {\r\n        history.push(`/activities/${id}`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // FORM CHANGE HANDLERS\r\n  const handleDescriptionChange = (event) => {\r\n    setDescription(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  const handleSkillChange = (event) => {\r\n    setSkill(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  const handleGameChange = (event) => {\r\n    setSelectedGame(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  function renderSelectedGame() {\r\n    if (selectedGame !== \"\" && games.length !== 0) {\r\n      const current = games.find((game) => game.title === selectedGame);\r\n      return <img className=\"create__form-image\" src={current.imageUrl} />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"edit\" key={activity.id}>\r\n        <div className=\"edit__header-container\">\r\n          <h1 className=\"edit__header\">Edit Activity</h1>\r\n        </div>\r\n        <form className=\"edit__form\" onSubmit={editActivity}>\r\n          <div className=\"edit__form-container\">\r\n            <div className=\"activity__form-game\">\r\n              <label className=\"edit__form-label\" htmlFor=\"game\">\r\n                Game:\r\n              </label>\r\n              <div className=\"edit__form-game-line\">\r\n                {renderSelectedGame()}\r\n                <select className=\"edit__form-select\" value={selectedGame} onChange={handleGameChange} name=\"game\" id=\"game\">\r\n                  {games\r\n                    .filter((game) => (game.title.includes(\"All\") ? \"\" : game.title))\r\n                    .map((game) => (\r\n                      <option value={game.title} key={game.id}>\r\n                        {game.title}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <label className=\"edit__form-label\" htmlFor=\"skill\">\r\n              Skill:\r\n            </label>\r\n            <select className=\"edit__form-select\" onChange={handleSkillChange} id=\"skill\" name=\"skill\">\r\n              <option value=\"Learning\">Learning</option>\r\n              <option value=\"Advanced\">Advanced</option>\r\n              <option value=\"Pro\">Pro</option>\r\n            </select>\r\n\r\n            <label className=\"edit__form-label\" htmlFor=\"description\">\r\n              Description:\r\n            </label>\r\n            <textarea className=\"edit__form-input\" type=\"text\" id=\"description\" name=\"description\" value={description} onChange={handleDescriptionChange} />\r\n          </div>\r\n          <div className=\"edit__button-container\">\r\n            <button className=\"edit__button-submit\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n            <a href=\"/\" className=\"edit__button-cancel\">\r\n              CANCEL\r\n            </a>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Ryan\\Desktop\\BrainStation\\Project Folder Structure\\ryan-doubinin-gamerconnect\\src\\Pages\\MyActivities\\MyActivities.jsx",["98","99","100","101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":56,"column":6,"nodeType":"108","endLine":56,"endColumn":12,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":13,"column":10,"nodeType":"112","messageId":"113","endLine":13,"endColumn":21},{"ruleId":"110","severity":1,"message":"114","line":13,"column":23,"nodeType":"112","messageId":"113","endLine":13,"endColumn":37},{"ruleId":"115","severity":1,"message":"116","line":46,"column":14,"nodeType":"117","endLine":46,"endColumn":75},{"ruleId":"106","severity":1,"message":"118","line":56,"column":6,"nodeType":"108","endLine":56,"endColumn":8,"suggestions":"119"},{"ruleId":"110","severity":1,"message":"120","line":4,"column":16,"nodeType":"112","messageId":"113","endLine":4,"endColumn":26},{"ruleId":"110","severity":1,"message":"121","line":7,"column":8,"nodeType":"112","messageId":"113","endLine":7,"endColumn":14},{"ruleId":"110","severity":1,"message":"122","line":18,"column":7,"nodeType":"112","messageId":"113","endLine":18,"endColumn":17},{"ruleId":"110","severity":1,"message":"123","line":22,"column":12,"nodeType":"112","messageId":"113","endLine":22,"endColumn":28},{"ruleId":"106","severity":1,"message":"124","line":91,"column":6,"nodeType":"108","endLine":91,"endColumn":20,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":158,"column":25,"nodeType":"128","messageId":"129","endLine":158,"endColumn":27},{"ruleId":"110","severity":1,"message":"130","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":14},{"ruleId":"110","severity":1,"message":"131","line":7,"column":10,"nodeType":"112","messageId":"113","endLine":7,"endColumn":15},{"ruleId":"110","severity":1,"message":"132","line":23,"column":18,"nodeType":"112","messageId":"113","endLine":23,"endColumn":24},{"ruleId":"110","severity":1,"message":"133","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":11},{"ruleId":"115","severity":1,"message":"116","line":11,"column":14,"nodeType":"117","endLine":11,"endColumn":76},{"ruleId":"106","severity":1,"message":"134","line":18,"column":6,"nodeType":"108","endLine":18,"endColumn":8,"suggestions":"135"},{"ruleId":"110","severity":1,"message":"136","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"137","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":12},{"ruleId":"110","severity":1,"message":"138","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":12},{"ruleId":"110","severity":1,"message":"139","line":5,"column":11,"nodeType":"112","messageId":"113","endLine":5,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":16,"column":7,"nodeType":"117","endLine":16,"endColumn":54},{"ruleId":"106","severity":1,"message":"140","line":61,"column":6,"nodeType":"108","endLine":61,"endColumn":8,"suggestions":"141"},{"ruleId":"110","severity":1,"message":"142","line":1,"column":35,"nodeType":"112","messageId":"113","endLine":1,"endColumn":44},{"ruleId":"110","severity":1,"message":"130","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":14},{"ruleId":"110","severity":1,"message":"131","line":8,"column":10,"nodeType":"112","messageId":"113","endLine":8,"endColumn":15},{"ruleId":"110","severity":1,"message":"143","line":16,"column":18,"nodeType":"112","messageId":"113","endLine":16,"endColumn":33},{"ruleId":"110","severity":1,"message":"144","line":34,"column":9,"nodeType":"112","messageId":"113","endLine":34,"endColumn":23},{"ruleId":"110","severity":1,"message":"130","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":14},{"ruleId":"110","severity":1,"message":"145","line":17,"column":9,"nodeType":"112","messageId":"113","endLine":17,"endColumn":18},{"ruleId":"106","severity":1,"message":"146","line":38,"column":6,"nodeType":"108","endLine":38,"endColumn":8,"suggestions":"147"},{"ruleId":"106","severity":1,"message":"118","line":56,"column":6,"nodeType":"108","endLine":56,"endColumn":8,"suggestions":"148"},{"ruleId":"115","severity":1,"message":"116","line":96,"column":14,"nodeType":"117","endLine":96,"endColumn":75},{"ruleId":"110","severity":1,"message":"149","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":16},{"ruleId":"110","severity":1,"message":"139","line":10,"column":11,"nodeType":"112","messageId":"113","endLine":10,"endColumn":13},{"ruleId":"110","severity":1,"message":"150","line":13,"column":9,"nodeType":"112","messageId":"113","endLine":13,"endColumn":16},{"ruleId":"106","severity":1,"message":"151","line":53,"column":6,"nodeType":"108","endLine":53,"endColumn":8,"suggestions":"152"},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authListenerAdded', 'db', and 'username'. Either include them or remove the dependency array.","ArrayExpression",["155"],"no-unused-vars","'gamePicture' is assigned a value but never used.","Identifier","unusedVar","'setGamePicture' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'games' and 'getGames'. Either include them or remove the dependency array.",["156"],"'useHistory' is defined but never used.","'Header' is defined but never used.","'gameSearch' is assigned a value but never used.","'allGamesFunction' is defined but never used.","React Hook useEffect has missing dependencies: 'getActivities' and 'getGames'. Either include them or remove the dependency array.",["157"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Link' is defined but never used.","'error' is assigned a value but never used.","'signup' is defined but never used.","'lol' is defined but never used.","React Hook useEffect has a missing dependency: 'renderSelectedGame'. Either include it or remove the dependency array.",["158"],"'useState' is defined but never used.","'gear' is defined but never used.","'logo' is defined but never used.","'id' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getActivity', 'getMessages', and 'user'. Either include them or remove the dependency array.",["159"],"'useEffect' is defined but never used.","'signupWithEmail' is defined but never used.","'createUsername' is assigned a value but never used.","'timestamp' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'activity' and 'getActivity'. Either include them or remove the dependency array.",["160"],["161"],"'firebase' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getActivities', 'getGames', and 'user'. Either include them or remove the dependency array.",["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"165","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [authListenerAdded, db, user, username]",{"range":"178","text":"179"},"Update the dependencies array to be: [games, getGames]",{"range":"180","text":"181"},"Update the dependencies array to be: [clickedGames, getActivities, getGames]",{"range":"182","text":"183"},"Update the dependencies array to be: [renderSelectedGame]",{"range":"184","text":"185"},"Update the dependencies array to be: [getActivity, getMessages, user]",{"range":"186","text":"187"},"Update the dependencies array to be: [activity, getActivity]",{"range":"188","text":"189"},{"range":"190","text":"181"},"Update the dependencies array to be: [getActivities, getGames, user]",{"range":"191","text":"192"},[1850,1856],"[authListenerAdded, db, user, username]",[1780,1782],"[games, getGames]",[3036,3050],"[clickedGames, getActivities, getGames]",[657,659],"[renderSelectedGame]",[1842,1844],"[getActivity, getMessages, user]",[1377,1379],"[activity, getActivity]",[1820,1822],[1723,1725],"[getActivities, getGames, user]"]